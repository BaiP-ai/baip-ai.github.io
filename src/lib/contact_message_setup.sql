-- Fresh setup script for the contact_messages table

-- Create the table
CREATE TABLE public.contact_messages (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
  name text,
  email text NOT NULL,
  company text,
  message text NOT NULL,
  status text DEFAULT 'new'::text, -- e.g., 'new', 'read', 'replied'
  admin_reply text -- To store admin replies later
);

-- Enable Row Level Security
ALTER TABLE public.contact_messages ENABLE ROW LEVEL SECURITY;

-- Create a simple INSERT policy allowing public access
CREATE POLICY "Allow public insert access" ON public.contact_messages
  FOR INSERT
  TO public -- Grant to public role (includes anon)
  WITH CHECK (true); -- Simplest check: always true

-- Add comments for clarity
COMMENT ON TABLE public.contact_messages IS 'Stores messages submitted via the contact form.';
COMMENT ON COLUMN public.contact_messages.status IS 'Tracks the status of the message (e.g., new, read, replied).';
COMMENT ON COLUMN public.contact_messages.admin_reply IS 'Stores the reply sent by an admin.';

-- Explicitly grant INSERT permission (often redundant with the policy, but safe)
GRANT INSERT ON TABLE public.contact_messages TO public, anon; 

-- Grant usage on the schema (usually default, but good practice)
GRANT USAGE ON SCHEMA public TO public, anon;

-- Grant select permission if you ever need to read data publicly (unlikely for contact messages)
-- GRANT SELECT ON TABLE public.contact_messages TO public, anon; 
